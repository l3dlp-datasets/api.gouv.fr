{
  "swagger" : "2.0",
  "info" : {
    "description" : "L'AIFE a mis en oeuvre une API permettant la génération d'un CAPTCHA dans le but premier de pouvoir l'adresser à ses applications internes mais également, par la suite, à ses partenaires et à l'interministériel.\n\nIl s'agit de la v2 de cette API qui permet la génération d'un CAPTCHA de type chaine de caractères à reproduire et la vérification de la saisie effectuée.\n\nSon intégration doit se faire au niveau de la couche présentation (Front-End) et, étant exposée sur PISTE, ses accès et ses utilisateurs sont gérés via PISTE.\n\nVous trouverez ci-après le guide d'implémention du CAPTCHEtat de l'AIFE.",
    "version" : "2.0",
    "title" : "CaptchEtat v2",
    "contact" : {
      "name" : "Support CaptchEtat",
      "email" : "piste.aife@finances.gouv.fr"
    }
  },
  "host" : "sandbox-api.piste.gouv.fr",
  "basePath" : "/piste/captchetat/v2",
  "schemes" : [ "https", "http" ],
  "security" : [ {
    "API_Key_Oauth.API Key" : [ ]
  }, {
    "API_Key_Oauth.OAuthImplicit" : [ "piste.captchetat" ]
  }, {
    "API_Key_Oauth.OAuthImplicit" : [ "aife.captchetatv2" ]
  }, {
    "API_Key_Oauth.OAuthAccessCode" : [ "piste.captchetat" ]
  }, {
    "API_Key_Oauth.OAuthAccessCode" : [ "aife.captchetatv2" ]
  } ],
  "paths" : {
    "/simple-captcha-endpoint" : {
      "get" : {
        "tags" : [ "Captcha" ],
        "summary" : "Endpoint permettant de récupérer un élément du captcha",
        "description" : "La génération d'un captcha se réalise au travers d'un premier appel à ce endpoint par la librairie front avec les paramètre c et get=image. Cet appel renvoie un json comportant l'image en base 64 et l'uuid du captcha généré.\n\n Ce premier appel est effectué automatiquement au chargement d'une page dans lequel est intégré le composant captchetat front.\n\n Au clic sur le bouton de rechargement, on réitère cet appel qui met à jour l'image et l'uuid avec les nouvelles données récupérées.\n\n Au clic sur le bouton de génération du son, un appel est effectué avec les paramètre c, get=sound et t=uuid. Cet appel renvoie le captcha audio correspondant à l'image sous forme de byte array au format audio/xwave.",
        "operationId" : "GET /simple-captcha-endpoint",
        "produces" : [ "application/json", "audio/x-wav" ],
        "parameters" : [ {
          "name" : "get",
          "in" : "query",
          "description" : "Type d'objet voulant être récupéré.",
          "required" : true,
          "type" : "string",
          "enum" : [ "image", "sound" ]
        }, {
          "name" : "c",
          "in" : "query",
          "description" : "Nom du captcha voulant être récupéré. Ce parametre est obligatoire lorsqu'on choisi les types d'objets du parametre get suivants (image, sound)",
          "required" : false,
          "type" : "string",
          "enum" : [ "captchaFR", "captchaEN", "numerique6_7CaptchaFR", "numerique6_7CaptchaEN", "alphabetique6_7CaptchaFR", "alphabetique6_7CaptchaEN", "alphanumerique12CaptchaFR", "alphanumerique12CaptchaEN", "alphabetique12CaptchaFR", "alphabetique12CaptchaEN", "numerique12CaptchaFR", "numerique12CaptchaEN", "alphanumerique6to9LightCaptchaEN", "alphanumerique6to9LightCaptchaFR", "alphanumerique4to6LightCaptchaEN", "alphanumerique4to6LightCaptchaFR" ]
        }, {
          "name" : "t",
          "in" : "query",
          "description" : "Identifiant captcha, c'est un parametre technique non utilisable par le developpeur. Il est renseigné automatiquement par l'appel avec get=sound, pour récupérer le captcha audio correspondant à l'image affichée.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/resultCaptcha"
            }
          },
          "400" : {
            "description" : "Bad request. Mauvais format de la requête."
          },
          "500" : {
            "description" : "Internal Server Error. Erreur Interne du Serveur."
          },
          "404" : {
            "description" : "Not found. Ressource introuvable."
          }
        }
      }
    },
    "/valider-captcha" : {
      "post" : {
        "tags" : [ "CaptchEtat" ],
        "summary" : "Valide un captcha",
        "description" : "Endpoint permettant la validation d'un captcha généré à partir de l'id et du code associé.",
        "operationId" : "POST /valider-captcha",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/validerCaptcha"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "boolean",
              "description" : "Quand le captcha est validé, la réponse sera true, sinon false"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not found"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/version" : {
      "get" : {
        "tags" : [ "CaptchEtat" ],
        "summary" : "Renvoie la version de l'application CaptchEtat",
        "description" : "Endpoint permettant de récupérer la version de l'application CaptchEtat.",
        "operationId" : "GET /version",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "object",
              "properties" : {
                "version" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/healthcheck" : {
      "get" : {
        "tags" : [ "Captcha" ],
        "summary" : "Teste l'état du service CaptchEtat.",
        "description" : "API permettant de tester l'état du service Captcha. Ce endpoint renvoie les statuts de fonctionnement de l'API et de ses composants.",
        "operationId" : "GET /healthcheck",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/resultHealthcheck"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/captcha/{uuid}/code/infos" : {
      "get" : {
        "tags" : [ "CaptchEtat" ],
        "summary" : "Récupère les informations d'un captcha à partir de son identifiant.",
        "description" : "Endpoint permettant de récupérer la taille et le type d'un captcha à partir de son identifiant.",
        "operationId" : "GET /captcha/{uuid}/code/infos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uuid",
          "in" : "path",
          "description" : "Identifiant du captcha",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "object",
              "properties" : {
                "taille" : {
                  "type" : "integer"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      }
    },
    "/info" : {
      "get" : {
        "tags" : [ "CaptchEtat" ],
        "summary" : "Renvoie les informations relatives à l'application CaptchEtat.",
        "description" : "Endpoint permettant de renvoyer les informations relatives à la version de l'application CaptchEtat.",
        "operationId" : "GET /info",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "object",
              "properties" : {
                "app" : {
                  "type" : "object",
                  "properties" : {
                    "version" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "API_Key_Oauth.OAuthImplicit" : {
      "description" : "OAuth",
      "type" : "oauth2",
      "authorizationUrl" : "https://sandbox-oauth.piste.gouv.fr/api/oauth/authorize",
      "flow" : "implicit",
      "scopes" : {
        "piste.captchetat" : "",
        "aife.captchetatv2" : ""
      }
    },
    "API_Key_Oauth.API Key" : {
      "description" : "API Key",
      "type" : "apiKey",
      "name" : "KeyId",
      "in" : "header"
    },
    "API_Key_Oauth.OAuthAccessCode" : {
      "description" : "OAuth",
      "type" : "oauth2",
      "authorizationUrl" : "https://sandbox-oauth.piste.gouv.fr/api/oauth/authorize",
      "tokenUrl" : "https://sandbox-oauth.piste.gouv.fr/api/oauth/token",
      "flow" : "accessCode",
      "scopes" : {
        "piste.captchetat" : "",
        "aife.captchetatv2" : ""
      }
    }
  },
  "definitions" : {
    "resultHealthcheck" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "UP"
        },
        "components" : {
          "type" : "object",
          "properties" : {
            "diskSpace" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "example" : "UP"
                },
                "details" : {
                  "type" : "object",
                  "properties" : {
                    "total" : {
                      "type" : "string",
                      "example" : "2136997888,"
                    },
                    "free" : {
                      "type" : "string",
                      "example" : "2074886144,"
                    },
                    "threshold" : {
                      "type" : "string",
                      "example" : "10485760,"
                    },
                    "exists" : {
                      "type" : "boolean",
                      "example" : true
                    }
                  }
                }
              }
            },
            "memcachedHealth" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "example" : "UP"
                }
              }
            },
            "ping" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "example" : "UP"
                }
              }
            }
          }
        }
      }
    },
    "resultCaptcha" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string",
          "example" : "d6f533f7-743c-449e-b496-79fb2192b46c"
        },
        "imageb64" : {
          "type" : "string",
          "example" : ""
        }
      },
      "description" : "Deux types de réponses sont possibles : image et audio."
    },
    "validerCaptcha" : {
      "type" : "object",
      "required" : [ "code", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "example" : "e7da1f49-07d6-4ed7-8d5b-21e4ec4e22ec",
          "description" : "Identifiant du captcha à valider"
        },
        "code" : {
          "type" : "string",
          "example" : "AJKDLDOM3",
          "description" : "Code du captcha à valider"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Guide Implementation CAPTCHEtat",
    "url" : "https://static.piste.gouv.fr/captchEtat/docs/CAPTCHA_v2_GUIDE_IMPLEMENTATION.pdf"
  }
}
